{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan Dom\\xE9nech\\\\Desktop\\\\ProyectosLogixs\\\\TRABAJOS\\\\TFG\\\\Interface\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState(null);\n  const [uploadMessage, setUploadMessage] = useState('');\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n\n  // Maneja la selección de archivos\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files);\n  };\n\n  // Envía los archivos PDF al endpoint /upload\n  const handleUpload = async () => {\n    if (!selectedFiles || selectedFiles.length === 0) {\n      setUploadMessage(\"Por favor, selecciona al menos un archivo PDF.\");\n      return;\n    }\n    setIsUploading(true);\n    setUploadMessage(\"Subiendo archivos...\");\n    const formData = new FormData();\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append(\"files\", selectedFiles[i]);\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUploadMessage(\"Archivos subidos correctamente.\");\n      } else {\n        setUploadMessage(\"Error: \" + data.error);\n      }\n    } catch (error) {\n      console.error(\"Error al subir archivos:\", error);\n      setUploadMessage(\"Error al subir archivos.\");\n    }\n    setIsUploading(false);\n  };\n\n  // Llama al endpoint /analyze para procesar los archivos y obtener resultados\n  const handleAnalyze = async () => {\n    setIsAnalyzing(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze\", {\n        method: \"POST\"\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setAnalysisResults(data);\n      } else {\n        setUploadMessage(\"Error en el análisis: \" + data.error);\n      }\n    } catch (error) {\n      console.error(\"Error al analizar:\", error);\n      setUploadMessage(\"Error al analizar.\");\n    }\n    setIsAnalyzing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Integraci\\xF3n React con Flask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Subir archivos PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          accept: \"application/pdf\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          disabled: isUploading,\n          children: isUploading ? \"Subiendo...\" : \"Subir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: uploadMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analizar Documentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAnalyze,\n          disabled: isAnalyzing,\n          children: isAnalyzing ? \"Analizando...\" : \"Analizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), analysisResults && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Resultados del An\\xE1lisis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), analysisResults.responses && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Respuestas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(analysisResults.responses).map(([question, answer], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [question, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this), \" \", answer]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), analysisResults.excel_files && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Archivos Excel:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(analysisResults.excel_files).map(([pdfFile, excelFile], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [pdfFile, \":\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `http://localhost:5000/download/${excelFile}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: [\"Descargar \", excelFile]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nWJOqBIRslVvmre/jnwTIHtKbFM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFiles","setSelectedFiles","uploadMessage","setUploadMessage","analysisResults","setAnalysisResults","isUploading","setIsUploading","isAnalyzing","setIsAnalyzing","handleFileChange","e","target","files","handleUpload","length","formData","FormData","i","append","response","fetch","method","body","data","json","ok","error","console","handleAnalyze","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","accept","onChange","onClick","disabled","responses","Object","entries","map","question","answer","index","excel_files","pdfFile","excelFile","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/Juan Doménech/Desktop/ProyectosLogixs/TRABAJOS/TFG/Interface/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState(null);\n  const [uploadMessage, setUploadMessage] = useState('');\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n\n  // Maneja la selección de archivos\n  const handleFileChange = (e) => {\n    setSelectedFiles(e.target.files);\n  };\n\n  // Envía los archivos PDF al endpoint /upload\n  const handleUpload = async () => {\n    if (!selectedFiles || selectedFiles.length === 0) {\n      setUploadMessage(\"Por favor, selecciona al menos un archivo PDF.\");\n      return;\n    }\n    setIsUploading(true);\n    setUploadMessage(\"Subiendo archivos...\");\n\n    const formData = new FormData();\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append(\"files\", selectedFiles[i]);\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUploadMessage(\"Archivos subidos correctamente.\");\n      } else {\n        setUploadMessage(\"Error: \" + data.error);\n      }\n    } catch (error) {\n      console.error(\"Error al subir archivos:\", error);\n      setUploadMessage(\"Error al subir archivos.\");\n    }\n    setIsUploading(false);\n  };\n\n  // Llama al endpoint /analyze para procesar los archivos y obtener resultados\n  const handleAnalyze = async () => {\n    setIsAnalyzing(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze\", {\n        method: \"POST\",\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setAnalysisResults(data);\n      } else {\n        setUploadMessage(\"Error en el análisis: \" + data.error);\n      }\n    } catch (error) {\n      console.error(\"Error al analizar:\", error);\n      setUploadMessage(\"Error al analizar.\");\n    }\n    setIsAnalyzing(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Integración React con Flask</h1>\n      </header>\n      <main>\n        <section>\n          <h2>Subir archivos PDF</h2>\n          <input type=\"file\" multiple accept=\"application/pdf\" onChange={handleFileChange} />\n          <button onClick={handleUpload} disabled={isUploading}>\n            {isUploading ? \"Subiendo...\" : \"Subir\"}\n          </button>\n          <p>{uploadMessage}</p>\n        </section>\n        <section>\n          <h2>Analizar Documentos</h2>\n          <button onClick={handleAnalyze} disabled={isAnalyzing}>\n            {isAnalyzing ? \"Analizando...\" : \"Analizar\"}\n          </button>\n        </section>\n        {analysisResults && (\n          <section>\n            <h2>Resultados del Análisis</h2>\n            {analysisResults.responses && (\n              <div>\n                <h3>Respuestas:</h3>\n                <ul>\n                  {Object.entries(analysisResults.responses).map(([question, answer], index) => (\n                    <li key={index}>\n                      <strong>{question}:</strong> {answer}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            {analysisResults.excel_files && (\n              <div>\n                <h3>Archivos Excel:</h3>\n                <ul>\n                  {Object.entries(analysisResults.excel_files).map(([pdfFile, excelFile], index) => (\n                    <li key={index}>\n                      {pdfFile}:{' '}\n                      <a \n                        href={`http://localhost:5000/download/${excelFile}`} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\">\n                        Descargar {excelFile}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </section>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}